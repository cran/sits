% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_combine_predictions.R
\name{sits_combine_predictions}
\alias{sits_combine_predictions}
\alias{sits_combine_predictions.average}
\alias{sits_combine_predictions.uncertainty}
\alias{sits_combine_predictions.default}
\title{Estimate ensemble prediction based on list of probs cubes}
\usage{
sits_combine_predictions(
  cubes,
  type = "average",
  ...,
  memsize = 8L,
  multicores = 2L,
  output_dir,
  version = "v1"
)

\method{sits_combine_predictions}{average}(
  cubes,
  type = "average",
  ...,
  weights = NULL,
  memsize = 8L,
  multicores = 2L,
  output_dir,
  version = "v1"
)

\method{sits_combine_predictions}{uncertainty}(
  cubes,
  type = "uncertainty",
  ...,
  uncert_cubes,
  memsize = 8L,
  multicores = 2L,
  output_dir,
  version = "v1"
)

\method{sits_combine_predictions}{default}(cubes, type, ...)
}
\arguments{
\item{cubes}{List of probability data cubes (class "probs_cube")}

\item{type}{Method to measure uncertainty. One of "average" or
"uncertainty"}

\item{...}{Parameters for specific functions.}

\item{memsize}{Memory available for classification in GB
(integer, min = 1, max = 16384).}

\item{multicores}{Number of cores to be used for classification
(integer, min = 1, max = 2048).}

\item{output_dir}{Valid directory for output file.
(character vector of length 1).}

\item{version}{Version of the output
(character vector of length 1).}

\item{weights}{Weights for averaging (numeric vector).}

\item{uncert_cubes}{Uncertainty cubes to be used as local weights when
type = "uncertainty" is selected
(list of tibbles with class "uncertainty_cube")}
}
\value{
A combined probability cube (tibble of class "probs_cube").
}
\description{
Calculate an ensemble predictor based a list of probability
cubes. The function combines the output of two or more classifier
to derive a value which is based on weights assigned to each model.
The supported types of ensemble predictors are 'average' and
'uncertainty'.
}
\examples{
if (sits_run_examples()) {
    # create a data cube from local files
    data_dir <- system.file("extdata/raster/mod13q1", package = "sits")
    cube <- sits_cube(
        source = "BDC",
        collection = "MOD13Q1-6",
        data_dir = data_dir
    )
    # create a random forest model
    rfor_model <- sits_train(samples_modis_ndvi, sits_rfor())
    # classify a data cube using rfor model
    probs_rfor_cube <- sits_classify(
        data = cube, ml_model = rfor_model, output_dir = tempdir(),
        version = "rfor"
    )
    # create an XGBoost model
    svm_model <- sits_train(samples_modis_ndvi, sits_svm())
    # classify a data cube using SVM model
    probs_svm_cube <- sits_classify(
        data = cube, ml_model = svm_model, output_dir = tempdir(),
        version = "svm"
    )
    # create a list of predictions to be combined
    pred_cubes <- list(probs_rfor_cube, probs_svm_cube)
    # combine predictions
    comb_probs_cube <- sits_combine_predictions(
        pred_cubes,
        output_dir = tempdir()
    )
    # plot the resulting combined prediction cube
    plot(comb_probs_cube)
}
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}
}
