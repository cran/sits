% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_label_classification.R
\name{sits_label_classification}
\alias{sits_label_classification}
\alias{sits_label_classification.probs_cube}
\alias{sits_label_classification.probs_vector_cube}
\alias{sits_label_classification.raster_cube}
\alias{sits_label_classification.derived_cube}
\alias{sits_label_classification.tbl_df}
\alias{sits_label_classification.default}
\title{Build a labelled image from a probability cube}
\usage{
sits_label_classification(
  cube,
  clean = TRUE,
  window_size = 3L,
  memsize = 4,
  multicores = 2,
  output_dir,
  version = "v1",
  progress = TRUE
)

\method{sits_label_classification}{probs_cube}(
  cube,
  ...,
  clean = TRUE,
  window_size = 3L,
  memsize = 4L,
  multicores = 2L,
  output_dir,
  version = "v1",
  progress = TRUE
)

\method{sits_label_classification}{probs_vector_cube}(
  cube,
  ...,
  output_dir,
  version = "v1",
  progress = TRUE
)

\method{sits_label_classification}{raster_cube}(cube, ...)

\method{sits_label_classification}{derived_cube}(cube, ...)

\method{sits_label_classification}{tbl_df}(cube, ...)

\method{sits_label_classification}{default}(cube, ...)
}
\arguments{
\item{cube}{Classified image data cube.}

\item{clean}{A logical value to apply a modal function to clean up
possible noisy pixels keeping the most frequently
values within the neighborhood. Default is TRUE.}

\item{window_size}{An odd integer representing the size of the
sliding window of the modal function (min = 1, max = 15).}

\item{memsize}{maximum overall memory (in GB) to label the
classification.}

\item{multicores}{Number of workers to label the classification in
parallel.}

\item{output_dir}{Output directory for classified files.}

\item{version}{Version of resulting image
(in the case of multiple runs).}

\item{progress}{Show progress bar?}

\item{...}{Other parameters for specific functions.}
}
\value{
A data cube with an image with the classified map.
}
\description{
Takes a set of classified raster layers with probabilities,
             and label them based on the maximum probability for each pixel.
}
\note{
Please refer to the sits documentation available in
<https://e-sensing.github.io/sitsbook/> for detailed examples.
}
\examples{
if (sits_run_examples()) {
    # create a random forest model
    rfor_model <- sits_train(samples_modis_ndvi, sits_rfor())
    # create a data cube from local files
    data_dir <- system.file("extdata/raster/mod13q1", package = "sits")
    cube <- sits_cube(
        source = "BDC",
        collection = "MOD13Q1-6",
        data_dir = data_dir
    )
    # classify a data cube
    probs_cube <- sits_classify(
        data = cube, ml_model = rfor_model, output_dir = tempdir()
    )
    # plot the probability cube
    plot(probs_cube)
    # smooth the probability cube using Bayesian statistics
    bayes_cube <- sits_smooth(probs_cube, output_dir = tempdir())
    # plot the smoothed cube
    plot(bayes_cube)
    # label the probability cube
    label_cube <- sits_label_classification(
        bayes_cube,
        output_dir = tempdir()
    )
    # plot the labelled cube
    plot(label_cube)
}
}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}

Felipe Souza, \email{felipe.souza@inpe.br}
}
