% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_plot.R
\name{plot.probs_vector_cube}
\alias{plot.probs_vector_cube}
\title{Plot probability vector cubes}
\usage{
\method{plot}{probs_vector_cube}(
  x,
  ...,
  tile = x[["tile"]][[1]],
  labels = NULL,
  palette = "YlGn",
  rev = FALSE,
  scale = 1,
  legend_position = "outside"
)
}
\arguments{
\item{x}{Object of class "probs_vector_cube".}

\item{...}{Further specifications for \link{plot}.}

\item{tile}{Tile to be plotted.}

\item{labels}{Labels to plot}

\item{palette}{RColorBrewer palette}

\item{rev}{Reverse order of colors in palette?}

\item{scale}{Scale to plot map (0.4 to 1.0)}

\item{legend_position}{Where to place the legend (default = "outside")}
}
\value{
A plot containing probabilities associated
                      to each class for each pixel.
}
\description{
plots a probability cube
}
\examples{
if (sits_run_examples()) {
    # create a random forest model
    rfor_model <- sits_train(samples_modis_ndvi, sits_rfor())
    # create a data cube from local files
    data_dir <- system.file("extdata/raster/mod13q1", package = "sits")
    cube <- sits_cube(
        source = "BDC",
        collection = "MOD13Q1-6.1",
        data_dir = data_dir
    )
    # segment the image
    segments <- sits_segment(
        cube = cube,
        seg_fn = sits_slic(step = 5,
                           compactness = 1,
                           dist_fun = "euclidean",
                           avg_fun = "median",
                           iter = 20,
                           minarea = 10,
                           verbose = FALSE),
        output_dir = tempdir()
    )
    # classify a data cube
    probs_vector_cube <- sits_classify(
        data = segments,
        ml_model = rfor_model,
        output_dir = tempdir()
    )
    # plot the resulting probability cube
    plot(probs_vector_cube, labels = "Forest")
}

}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
